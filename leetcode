Given an integer array nums, in which exactly two elements appear only once and all the other elements appear exactly twice. Find the two elements that appear only once. You can return the answer in any order.

You must write an algorithm that runs in linear runtime complexity and uses only constant extra space.


class Solution(object):
    def singleNumber(self, nums):
       
        result=[]
        myset=set(nums)
        for num in myset:
            if nums.count(num)==1:
                result.append(num)
        
        return(result)
.......................................................................................
class Solution(object):
    def lengthOfLongestSubstring(self, s):
        """
        :type s: str
        :rtype: int
        """
        maximum = 0
        for i in range (len (s)):
            m=0
            mylist=[]
            for word in range (i,len(s)):
                if s[word] not in mylist:
                    m+=1
                    mylist.append(s[word])
                    maximum=max(maximum,m)
                else:
                    break
            

        return maximum
.............................................................................................
You are given an m x n integer matrix matrix with the following two properties:

Each row is sorted in non-decreasing order.
The first integer of each row is greater than the last integer of the previous row.
Given an integer target, return true if target is in matrix or false otherwise.

class Solution(object):
    def searchMatrix(self, matrix, target):
        """
        :type matrix: List[List[int]]
        :type target: int
        :rtype: bool
        """
        lastlist=True
        for i in range (len(matrix)):
            if matrix[i][0]>=target:
                if matrix[i][0]==target:
                    return True
                elif i==0:
                    return False
                lastlist=False
                break
        if lastlist==True:
            j=i
        else:
            j=i-1
        for x in range (len(matrix [j])):
            if target==matrix[j][x]:
                return True
        return False
......................................................................................................
